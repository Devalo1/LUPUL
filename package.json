{
  "name": "my-typescript-app",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "dependencies": {
    "@emotion/react": "^11.11.5",
    "@emotion/styled": "^11.11.5",
    "@mui/icons-material": "^5.15.20",
    "@mui/material": "^5.15.20",
    "@reduxjs/toolkit": "^2.7.0",
    "@types/mongoose": "^5.11.97",
    "axios": "^1.9.0",
    "chart.js": "^4.4.9",
    "cors": "^2.8.5",
    "date-fns": "^4.1.0",
    "dotenv": "^17.2.1",
    "express": "^5.1.0",
    "firebase": "^11.8.1",
    "firebase-admin": "^13.4.0",
    "firebase-functions": "^6.3.2",
    "framer-motion": "^10.18.0",
    "jspdf": "^3.0.1",
    "lucide-react": "^0.511.0",
    "mongoose": "^7.8.6",
    "mongoose-delete": "^1.0.2",
    "nodemailer": "^6.10.0",
    "ntp-logo-react": "^1.0.0",
    "react": "^18.2.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^18.2.0",
    "react-hot-toast": "^2.5.2",
    "react-icons": "^5.5.0",
    "react-redux": "^9.2.0",
    "react-router-dom": "^6.30.0",
    "react-toastify": "^11.0.5",
    "safe-buffer": "^5.2.1",
    "web-vitals": "^3.5.2"
  },
  "devDependencies": {
    "@babel/core": "^7.28.0",
    "@babel/preset-env": "^7.27.2",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@emotion/babel-plugin": "^11.13.5",
    "@tailwindcss/aspect-ratio": "^0.4.2",
    "@tailwindcss/forms": "^0.5.7",
    "@tailwindcss/typography": "^0.5.10",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/axios": "^0.9.36",
    "@types/connect": "^3.4.38",
    "@types/http-errors": "^2.0.4",
    "@types/jest": "^29.5.14",
    "@types/node": "^20.10.0",
    "@types/react": "^18.2.39",
    "@types/react-dom": "^18.2.17",
    "@types/testing-library__jest-dom": "^5.14.9",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vitejs/plugin-react": "^4.6.0",
    "@vitejs/plugin-react-swc": "^3.10.2",
    "@vitest/ui": "^3.1.4",
    "autoprefixer": "^10.4.16",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "concurrently": "^9.1.2",
    "eslint": "^8.57.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.4",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-transform-stub": "^2.0.0",
    "jsdom": "^26.1.0",
    "node-fetch": "^2.7.0",
    "postcss": "^8.4.31",
    "prettier": "^3.1.0",
    "rollup-plugin-node-polyfills": "^0.2.1",
    "rollup-plugin-visualizer": "^5.14.0",
    "tailwindcss": "^3.3.5",
    "terser": "^5.39.0",
    "ts-jest": "^29.3.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3",
    "vite": "^6.2.5",
    "vite-plugin-compression": "^0.5.1",
    "vitest": "^3.1.4"
  },
  "scripts": {
    "start": "vite",
    "build": "npx tsc && vite build",
    "typecheck": "npx tsc --noEmit",
    "build-netlify": "npm run build",
    "test": "vitest",
    "test:jest": "jest",
    "lint": "eslint .",
    "preview": "vite preview",
    "security-fix": "node scripts/security-fix.js",
    "fix-dependencies": "node scripts/fix-dependencies.js",
    "check-deps": "node scripts/check-dependencies.js",
    "clean": "rimraf node_modules dist",
    "dev": "netlify dev",
    "serve": "vite preview",
    "emulators": "firebase emulators:start",
    "dev:all": "concurrently \"npm run dev\" \"npm run emulators\"",
    "check-emulators": "node scripts/check-emulators.js",
    "init-medical-system": "node scripts/init-medical-system.cjs",
    "test-medical-ai": "node scripts/test-medical-system.js"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "firebaseAuth": {
    "import": [
      "import { getAuth, onAuthStateChanged } from 'firebase/auth';"
    ],
    "authLogic": [
      "const auth = getAuth();",
      "onAuthStateChanged(auth, (user) => { if (user) { console.log('User is signed in:', user); } else { console.log('No user is signed in.'); } });"
    ]
  },
  "build": {
    "base": "functions",
    "command": "npm run build-netlify",
    "publish": "dist"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}
