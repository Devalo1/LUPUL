#!/usr/bin/env node

// Test specific pentru a verifica why regex patterns nu funcÈ›ioneazÄƒ pentru "Dani"

process.env.FIRESTORE_EMULATOR_HOST = "localhost:8081";
const { extractInfoFromMessage } = require("./lib/firebase-user-profiles.cjs");

function testNameExtraction() {
  console.log('ðŸ§ª === TEST EXTRAGERE NUME "DANI" ===\n');

  const testMessages = [
    "Salut! Sunt Dani È™i vreau sÄƒ vorbesc cu tine.",
    "MÄƒ numesc Dani",
    "Numele meu este Dani",
    "Sunt Dani",
    "Dani",
    "Da, sunt Dani È™i am 25 de ani",
    "Eu sunt Dani",
  ];

  // TesteazÄƒ pattern-urile manual
  const explicitNamePatterns = [
    /numele meu este ([a-zA-ZÄƒÃ¢Ã®È™È›Ä‚Ã‚ÃŽÈ˜Èš]+)/i,
    /mÄƒ numesc ([a-zA-ZÄƒÃ¢Ã®È™È›Ä‚Ã‚ÃŽÈ˜Èš]+)/i,
    /ma numesc ([a-zA-ZÄƒÃ¢Ã®È™È›Ä‚Ã‚ÃŽÈ˜Èš]+)/i,
    /mÄƒ cheamÄƒ ([a-zA-ZÄƒÃ¢Ã®È™È›Ä‚Ã‚ÃŽÈ˜Èš]+)/i,
    /ma cheama ([a-zA-ZÄƒÃ¢Ã®È™È›Ä‚Ã‚ÃŽÈ˜Èš]+)/i,
    /sunt ([a-zA-ZÄƒÃ¢Ã®È™È›Ä‚Ã‚ÃŽÈ˜Èš]+)(?:\s*[,\.])/i,
    /sunt ([a-zA-ZÄƒÃ¢Ã®È™È›Ä‚Ã‚ÃŽÈ˜Èš]+)(?:\s+am\s+\d)/i,
    /sunt ([a-zA-ZÄƒÃ¢Ã®È™È›Ä‚Ã‚ÃŽÈ˜Èš]+)(?:\s*$)/i,
    /eu sunt ([a-zA-ZÄƒÃ¢Ã®È™È›Ä‚Ã‚ÃŽÈ˜Èš]+)/i,
  ];

  testMessages.forEach((message, index) => {
    console.log(`\n--- TEST ${index + 1}: "${message}" ---`);

    // Test cu functia completa
    const extracted = extractInfoFromMessage(message);
    console.log("âœ¨ Rezultat extractInfoFromMessage:", extracted);

    // Test pattern-uri individual
    explicitNamePatterns.forEach((pattern, i) => {
      const match = message.match(pattern);
      if (match) {
        console.log(`âœ… Pattern ${i + 1} match:`, match[1]);
      }
    });

    // Test contextual patterns
    const contextualPatterns = [
      /^([A-ZÄ‚Ã‚ÃŽÈ˜Èš][a-zÄƒÃ¢Ã®È™È›]{2,20})\.?!?\s*$/,
      /^([A-ZÄ‚Ã‚ÃŽÈ˜Èš][a-zÄƒÃ¢Ã®È™È›]{2,20})\s+([A-ZÄ‚Ã‚ÃŽÈ˜Èš][a-zÄƒÃ¢Ã®È™È›]{2,20})\.?!?\s*$/,
    ];

    contextualPatterns.forEach((pattern, i) => {
      const match = message.match(pattern);
      if (match) {
        console.log(`âœ… Contextual pattern ${i + 1} match:`, match[1]);
      }
    });
  });
}

testNameExtraction();
